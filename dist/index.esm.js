import{useReducer as r,useContext as t,createContext as n}from"react";import{jsx as e}from"react/jsx-runtime";import{produce as o}from"immer";function u(r,t){var n={root:t||{},dispatch:f((function(t){n.root=r(n.root,t)}))};return n}function i(r){}function c(r){return r&&"function"==typeof r.then}function f(r){return function(t){return new Promise((function(n,e){c(t)?t.then((function(t){r(t),n()})).catch((function(r){return e(r)})):(r(t),n())}))}}function a(r,t){return function(r){if(Array.isArray(r))return r}(r)||function(r,t){var n=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=n){var e,o,u,i,c=[],f=!0,a=!1;try{if(u=(n=n.call(r)).next,0===t){if(Object(n)!==n)return;f=!1}else for(;!(f=(e=u.call(n)).done)&&(c.push(e.value),c.length!==t);f=!0);}catch(r){a=!0,o=r}finally{try{if(!f&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(a)throw o}}return c}}(r,t)||function(r,t){if(!r)return;if("string"==typeof r)return l(r,t);var n=Object.prototype.toString.call(r).slice(8,-1);"Object"===n&&r.constructor&&(n=r.constructor.name);if("Map"===n||"Set"===n)return Array.from(r);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return l(r,t)}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}var m=n(null),y=n(null);function h(t){var n=t.children,o=t.reducer,u=t.initialState,i=a(r(o,u),2),c=i[0],l=i[1];return e(m.Provider,{value:c,children:e(y.Provider,{value:f(l),children:n})})}function s(r){var n=t(m);return r&&n?r(n):n}function v(){return t(y)||i}function d(r){return function(t,n){return Object.keys(r).forEach((function(e){var u=r[e];if(u){var i=o(t[e]||{},(function(r){u(r||{},n)}));t[e]=i}})),t}}export{i as NullDispatch,h as RootContextProvider,d as combineReducers,u as createServerStore,c as isPromise,v as useStateDispatch,s as useStateSelectorT,f as wrapDispatchWithAsync};
