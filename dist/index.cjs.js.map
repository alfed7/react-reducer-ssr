{"version":3,"file":"index.cjs.js","sources":["../src/state-manipulation.ts","../src/RootContextProvider/RootContextProvider.tsx","../src/combine-reducers.ts"],"sourcesContent":["import { Dispatch, Reducer } from 'react';\nexport interface Action<T = any> {\n  type: T\n}\nexport interface AnyAction extends Action {\n  [extraProps: string]: any\n}\nexport type EmptyState = Record<string, never> | {};\nexport type SelectorFunction<T> = (root: T) => any | null\nexport type ActionFunction = (dispatch: DispatchFunction, state: any, extraArgument: any) \n  => Promise<AnyAction> | Promise<void> | AnyAction | void | any\nexport interface ActionCreator<A, P extends any[] = any[]> {\n  (...args: P): A | Promise<void> | any\n}\nexport type DispatchFunction = ((action: AnyAction \n  | Promise<Action> | ActionCreator<Action> | any) => void)\n\nexport interface TypedUseSelectorHook<TState> {\n  <TSelected>(\n    selector: (state: TState) => TSelected\n  ): TSelected\n  <Selected = unknown>(\n    selector: (state: TState) => Selected\n  ): Selected\n}\n\nexport interface IStateStore<T> {\n  root: T\n  services?: any\n  dispatch: DispatchFunction\n}\nexport function createServerStore<T>(\n  reducer: Reducer<T, AnyAction>, customParams?: any, initialState?: T): IStateStore<T> {\n\n  const ssrDispatch = (action: AnyAction) => {\n    store.root = reducer(store.root, action);\n  };\n  const store: IStateStore<T> = { \n    root: initialState || {} as any,\n    dispatch: wrapDispatchWithAsync(ssrDispatch, customParams)\n  };\n  store.dispatch({ type: '@@INIT' });\n  return store;\n}\n\nexport function NullDispatch<T>(s: T) {}\n\nexport function isPromise(v: any): v is Promise<any> { \n  return v && typeof v.then === 'function';\n}\n\nexport function wrapDispatchWithAsync<T>(dispatch: Dispatch<T>, customParams?: any) {\n  return (nextState: Promise<T> | T): Promise<void> => {\n    return new Promise<void>((resolve, reject) => {\n      if(isPromise(nextState)) {\n        nextState\n          .then((s: T) => {\n            if(typeof s === 'function') {\n              const r = (s as ActionFunction)(dispatch as DispatchFunction, {}, customParams);\n              if(isPromise(r)) {\n                r\n                  .then(((s: T) => {\n                    resolve();\n                  }) as any)\n                  .catch((err: any) => reject(err));\n              }\n              else {\n                resolve();\n              }\n            }\n            else {\n              dispatch(s);\n              resolve();\n            }\n          })\n          .catch((err: any) => reject(err));\n      }\n      else {\n        dispatch(nextState);\n        resolve();\n      }\n    });\n  }\n}","import { Dispatch, ReactNode, Reducer, createContext, useContext, useReducer } from 'react';\nimport { AnyAction, EmptyState, NullDispatch, SelectorFunction, wrapDispatchWithAsync } from '../state-manipulation';\n\nconst RootContext = createContext(null);\nconst DispatchContext = createContext(null);\n\nexport interface IRootContextProps<T extends EmptyState> {\n  children: ReactNode\n  reducer: Reducer<T, AnyAction>\n  customParams?: any\n  initialState: T\n}\n\nexport function RootContextProvider<T extends EmptyState>(\n  { children, reducer, customParams, initialState }: IRootContextProps<T>) {\n  const [root, dispatch] = useReducer<Reducer<T, AnyAction>>(\n    reducer,\n    initialState\n  );\n\n  return (\n    <RootContext.Provider value={root as any}>\n        <DispatchContext.Provider value={wrapDispatchWithAsync(dispatch, customParams) as any}>\n          {children}\n        </DispatchContext.Provider>\n    </RootContext.Provider>\n  );\n}\n\nexport function useStateSelectorT<T>(selector: SelectorFunction<T>): any | null {\n  const root = useContext(RootContext);\n  if(selector && root) {\n    return selector(root);\n  }\n  else {\n    return root;\n  }\n}\n\nexport function useStateDispatch<T>(): Dispatch<T> {\n  return useContext(DispatchContext) || NullDispatch;\n}\n","import { Reducer } from \"react\";\n\nexport type RootState<S> = {[key: string]: S}\n\nexport type StateFromReducersMapObject<M> = M[keyof M] extends\n  | Reducer<any, any>\n  | undefined\n  ? {\n      [P in keyof M]: M[P] extends Reducer<infer S, any> ? S : never\n    }\n  : never\n\nexport type ReducerFromReducersMapObject<M> = M[keyof M] extends\n  | Reducer<any, any>\n  | undefined\n  ? M[keyof M]\n  : never\n\nexport type ActionFromReducer<R> = R extends Reducer<any, infer A>\n  ? A\n  : never\n\nexport type ActionFromReducersMapObject<M> = ActionFromReducer<\n  ReducerFromReducersMapObject<M>\n>\n\nexport function combineReducers<M>(\n  reducers: M\n): M[keyof M] extends Reducer<any, any> | undefined\n  ? Reducer<\n      StateFromReducersMapObject<M>,\n      ActionFromReducersMapObject<M>\n    >\n  : never\nexport function combineReducers<S extends Record<string, any>, A>(reducers: {[key: string]: Reducer<S, A>}) {\n  return (rootState: S, action: A): S => {\n    rootState = rootState || {}\n    let wasChanged = false;\n    Object.keys(reducers).forEach(k => {\n      const nextReducer = reducers[k];\n      if(nextReducer) {\n        const nextState = nextReducer(rootState[k] || {}, action);\n        if(nextState !== rootState[k]) {\n          (rootState as Record<string, any>)[k] = nextState;\n          wasChanged = true;\n        }\n      }\n    });\n    return wasChanged ? {...rootState} : rootState;\n  }\n}\n"],"names":["createServerStore","reducer","customParams","initialState","ssrDispatch","action","store","root","dispatch","wrapDispatchWithAsync","type","NullDispatch","s","isPromise","v","then","nextState","Promise","resolve","reject","r","err","RootContext","createContext","DispatchContext","RootContextProvider","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray","_jsx","Provider","value","useStateSelectorT","selector","useContext","useStateDispatch","combineReducers","reducers","rootState","wasChanged","Object","keys","forEach","k","nextReducer","_objectSpread"],"mappings":";;;;;AA+BO,SAASA,iBAAiBA,CAC/BC,OAA8B,EAAEC,YAAkB,EAAEC,YAAgB,EAAkB;AAEtF,EAAA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,MAAiB,EAAK;IACzCC,KAAK,CAACC,IAAI,GAAGN,OAAO,CAACK,KAAK,CAACC,IAAI,EAAEF,MAAM,CAAC,CAAA;GACzC,CAAA;AACD,EAAA,IAAMC,KAAqB,GAAG;AAC5BC,IAAAA,IAAI,EAAEJ,YAAY,IAAI,EAAS;AAC/BK,IAAAA,QAAQ,EAAEC,qBAAqB,CAACL,WAAW,EAAEF,YAAY,CAAA;GAC1D,CAAA;EACDI,KAAK,CAACE,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,QAAA;AAAS,GAAC,CAAC,CAAA;AAClC,EAAA,OAAOJ,KAAK,CAAA;AACd,CAAA;AAEO,SAASK,YAAYA,CAAIC,CAAI,EAAE,EAAC;AAEhC,SAASC,SAASA,CAACC,CAAM,EAAqB;AACnD,EAAA,OAAOA,CAAC,IAAI,OAAOA,CAAC,CAACC,IAAI,KAAK,UAAU,CAAA;AAC1C,CAAA;AAEO,SAASN,qBAAqBA,CAAID,QAAqB,EAAEN,YAAkB,EAAE;EAClF,OAAO,UAACc,SAAyB,EAAoB;AACnD,IAAA,OAAO,IAAIC,OAAO,CAAO,UAACC,OAAO,EAAEC,MAAM,EAAK;AAC5C,MAAA,IAAGN,SAAS,CAACG,SAAS,CAAC,EAAE;AACvBA,QAAAA,SAAS,CACND,IAAI,CAAC,UAACH,CAAI,EAAK;AACd,UAAA,IAAG,OAAOA,CAAC,KAAK,UAAU,EAAE;YAC1B,IAAMQ,CAAC,GAAIR,CAAC,CAAoBJ,QAAQ,EAAsB,EAAE,EAAEN,YAAY,CAAC,CAAA;AAC/E,YAAA,IAAGW,SAAS,CAACO,CAAC,CAAC,EAAE;AACfA,cAAAA,CAAC,CACEL,IAAI,CAAE,UAACH,CAAI,EAAK;AACfM,gBAAAA,OAAO,EAAE,CAAA;AACX,eAAS,CAAC,CAAA,OAAA,CACJ,CAAC,UAACG,GAAQ,EAAA;gBAAA,OAAKF,MAAM,CAACE,GAAG,CAAC,CAAA;eAAC,CAAA,CAAA;AACrC,aAAC,MACI;AACHH,cAAAA,OAAO,EAAE,CAAA;AACX,aAAA;AACF,WAAC,MACI;YACHV,QAAQ,CAACI,CAAC,CAAC,CAAA;AACXM,YAAAA,OAAO,EAAE,CAAA;AACX,WAAA;AACF,SAAC,CAAC,CAAA,OAAA,CACI,CAAC,UAACG,GAAQ,EAAA;UAAA,OAAKF,MAAM,CAACE,GAAG,CAAC,CAAA;SAAC,CAAA,CAAA;AACrC,OAAC,MACI;QACHb,QAAQ,CAACQ,SAAS,CAAC,CAAA;AACnBE,QAAAA,OAAO,EAAE,CAAA;AACX,OAAA;AACF,KAAC,CAAC,CAAA;GACH,CAAA;AACH;;;;;;;;AChFA,IAAMI,WAAW,gBAAGC,mBAAa,CAAC,IAAI,CAAC,CAAA;AACvC,IAAMC,eAAe,gBAAGD,mBAAa,CAAC,IAAI,CAAC,CAAA;AASpC,SAASE,mBAAmBA,CAAAC,IAAA,EACwC;AAAA,EAAA,IAAvEC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAE1B,OAAO,GAAAyB,IAAA,CAAPzB,OAAO;IAAEC,YAAY,GAAAwB,IAAA,CAAZxB,YAAY;IAAEC,YAAY,GAAAuB,IAAA,CAAZvB,YAAY,CAAA;AAC/C,EAAA,IAAAyB,WAAA,GAAyBC,gBAAU,CACjC5B,OAAO,EACPE,YACF,CAAC;IAAA2B,YAAA,GAAAC,cAAA,CAAAH,WAAA,EAAA,CAAA,CAAA;AAHMrB,IAAAA,IAAI,GAAAuB,YAAA,CAAA,CAAA,CAAA;AAAEtB,IAAAA,QAAQ,GAAAsB,YAAA,CAAA,CAAA,CAAA,CAAA;AAKrB,EAAA,oBACEE,cAAA,CAACV,WAAW,CAACW,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE3B,IAAY;AAAAoB,IAAAA,QAAA,eACrCK,cAAA,CAACR,eAAe,CAACS,QAAQ,EAAA;AAACC,MAAAA,KAAK,EAAEzB,qBAAqB,CAACD,QAAQ,EAAEN,YAAY,CAAS;AAAAyB,MAAAA,QAAA,EACnFA,QAAAA;KACuB,CAAA;AAAC,GACT,CAAC,CAAA;AAE3B,CAAA;AAEO,SAASQ,iBAAiBA,CAAIC,QAA6B,EAAc;AAC9E,EAAA,IAAM7B,IAAI,GAAG8B,gBAAU,CAACf,WAAW,CAAC,CAAA;EACpC,IAAGc,QAAQ,IAAI7B,IAAI,EAAE;IACnB,OAAO6B,QAAQ,CAAC7B,IAAI,CAAC,CAAA;AACvB,GAAC,MACI;AACH,IAAA,OAAOA,IAAI,CAAA;AACb,GAAA;AACF,CAAA;AAEO,SAAS+B,gBAAgBA,GAAmB;AACjD,EAAA,OAAOD,gBAAU,CAACb,eAAe,CAAC,IAAIb,YAAY,CAAA;AACpD;;;;;;;;ACPO,SAAS4B,eAAeA,CAAmCC,QAAwC,EAAE;AAC1G,EAAA,OAAO,UAACC,SAAY,EAAEpC,MAAS,EAAQ;AACrCoC,IAAAA,SAAS,GAAGA,SAAS,IAAI,EAAE,CAAA;IAC3B,IAAIC,UAAU,GAAG,KAAK,CAAA;IACtBC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAAC,UAAAC,CAAC,EAAI;AACjC,MAAA,IAAMC,WAAW,GAAGP,QAAQ,CAACM,CAAC,CAAC,CAAA;AAC/B,MAAA,IAAGC,WAAW,EAAE;AACd,QAAA,IAAM/B,SAAS,GAAG+B,WAAW,CAACN,SAAS,CAACK,CAAC,CAAC,IAAI,EAAE,EAAEzC,MAAM,CAAC,CAAA;AACzD,QAAA,IAAGW,SAAS,KAAKyB,SAAS,CAACK,CAAC,CAAC,EAAE;AAC5BL,UAAAA,SAAS,CAAyBK,CAAC,CAAC,GAAG9B,SAAS,CAAA;AACjD0B,UAAAA,UAAU,GAAG,IAAI,CAAA;AACnB,SAAA;AACF,OAAA;AACF,KAAC,CAAC,CAAA;AACF,IAAA,OAAOA,UAAU,GAAAM,aAAA,CAAOP,EAAAA,EAAAA,SAAS,IAAIA,SAAS,CAAA;GAC/C,CAAA;AACH;;;;;;;;;;;"}